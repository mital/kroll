#!/usr/bin/env python
import os, inspect

Import('build')

Env = build.env.Clone()
Env.Append(CPPDEFINES=('KROLL_PYTHON_API_EXPORT', 1))
build.add_thirdparty(Env, 'poco')

if build.is_osx():
	Env.Append(LIBS=['kroll'])
	Env.Append(CPPPATH=['/System/Library/Frameworks/Python.framework/Versions/Current/Headers',build.kroll_include_dir])
	Env.Append(FRAMEWORKS=['Python'])

elif build.is_linux():
	Env.Append(CPPPATH=['/usr/lib/python/2.5/i386-linux',
                        '/usr/include/python2.5',
						build.kroll_include_dir])
	Env.Append(LIBS=['python2.5'])

elif build.is_win32():
	Env.Append(LIBS=['kroll'])
	python_home = os.environ['PYTHONHOME']
	Env.Append(CPPPATH=[os.path.join(python_home, 'include'),build.kroll_include_dir])
	Env.Append(LIBPATH=[os.path.join(python_home, 'libs')])
	Env.Append(LIBS=['python25'])
	Env.Append(CCFLAGS = ['/MD'])
    
Env.SharedLibrary(build.dir + '/pythonmodule', Glob('*.cpp'))

script_dir = build.dir
cwd = os.path.dirname(inspect.currentframe().f_code.co_filename)
scripts = Glob(cwd + '/*.py')
for script in scripts:
	p = str(script).replace(cwd + os.path.sep, '')
	Command('%s/%s' % ( script_dir, p), p, Copy("$TARGET", "$SOURCE"))
