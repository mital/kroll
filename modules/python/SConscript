#!/usr/bin/env python
import os

Import('build')

Env = build.env.Clone()
Env.Append(LIBS=['kroll'])
Env.Append(CPPDEFINES={'KROLL_PYTHON_API_EXPORT': 1})

if build.is_osx():
	Env.Append(CPPPATH=['/System/Library/Frameworks/Python.framework/Versions/Current/Headers'])
	Env.Append(FRAMEWORKS=['Python'])
elif build.is_linux():
	Env.Append(CPPPATH=['/usr/lib/python/2.5/i386-linux',
                        '/usr/include/python2.5'])
	Env.Append(LIBS=['python2.5'])
elif build.is_win32():
	python_home = os.environ['PYTHONHOME']
	Env.Append(CPPPATH=[os.path.join(python_home, 'include')])
	Env.Append(LIBPATH=[os.path.join(python_home, 'libs')])
	Env.Append(LIBS=['python26'])
    
Env.SharedLibrary(build.dir + '/pythonmodule', Glob('*.cpp'))
