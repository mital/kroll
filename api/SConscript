#!/usr/bin/env python
import os, os.path as path
Import('build')

Env = build.env.Clone()
Env.Append(CPPDEFINES=('KROLL_API_EXPORT', 1))
build.add_thirdparty(Env, 'poco')

if build.is_win32():
	Env.Append(LIBS=['shell32', 'user32', 'Advapi32', 'iphlpapi'])
elif build.is_linux():
	if os.environ.has_key('PKG_CONFIG_PATH'):
		Env.AppendENVPath('PKG_CONFIG_PATH', os.environ['PKG_CONFIG_PATH'])
	Env.ParseConfig('pkg-config --cflags --libs libxml-2.0')
	Env.Append(LIBS=['pthread'])

if build.is_osx():
	Env.Append(LINKFLAGS='-install_name libkroll.dylib')

sources=Glob('*.cpp')
sources.extend(Glob('config/*.cpp'))
sources.extend(Glob('binding/*.cpp'))

if build.is_win32():
	sources.extend(Glob('unzip/*.cpp'))

# copy the includes for building the SDK
kroll_include = path.join(build.kroll_include_dir, 'kroll')
build.utils.CopyTree(build.cwd(), kroll_include, include=['.h'])

Env.SharedLibrary(build.dir +'/kroll', source=sources)
Env.SharedLibrary(build.dir +'/runtime/kroll', source=sources)
