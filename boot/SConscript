#!/usr/bin/env python
import os
Import('build')

Env = build.env.Clone()

if build.is_osx():
   Env.Append(FRAMEWORKS=['Cocoa','IOKit'])

if build.is_win32():
	Env.Append(LIBS=['user32','ole32'])

if build.is_linux():
	Env.ParseConfig('pkg-config --cflags --libs gtk+-2.0 gdk-2.0')

if build.is_osx() or build.is_linux():
	Env.Append(LIBS=['dl'])

p = Env.Program(build.dir + '/kboot', ['main.cpp','../api/file_utils.cpp'])

if build.is_win32():
	Env.AddPostAction(p, ('mt.exe -nologo -manifest ' + \
	                     '"%s/kboot.exe.manifest" ' + \
	                     ' -outputresource:%s/kboot.exe') % \
	                     (build.dir, build.dir))
	
