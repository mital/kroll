#!/usr/bin/env python
import os, os.path as path

Import('build')
Import('tiBuild')

Env = build.env.Clone()
Env.Append(CPPDEFINES={'WIN32_LEAN_AND_MEAN': 1, 'NO_UNZIP' : 1})
Env.Append(CPPPATH=['#common/win32','#common'])
Env.Append(LIBS = ['shell32', 'user32'])

poco = path.join(build.third_party, 'poco')
poco_lib = path.join(poco, 'lib')
if build.is_osx():
    poco_inc = path.join(poco, 'headers')
else:
    poco_inc = path.join(poco, 'include')

Env.Append(LIBPATH=[poco_lib])
Env.Append(CPPPATH=[poco_inc])
Env.Append(LIBS=['PocoFoundation','PocoNet','PocoNetSSL'])

o = Env.Object(target = 'file_utils_boot.o', source = '../api/file_utils.cpp')
p = Env.Program(build.dir + '/kboot', ['boot.cpp','file_utils_boot.o'])

Env.AddPostAction(p, 'mt.exe -nologo -manifest "'+tiBuild.absdir+'/kboot.exe.manifest'+'" -outputresource:'+tiBuild.absdir+'/kboot.exe')
