#!/usr/bin/env python
import os
Import('build')

Env = build.env.Clone()

build.add_thirdparty(Env, 'poco')

if build.is_osx():
   Env.Append(FRAMEWORKS=['Cocoa'])


if build.is_win32():
	Env.Append(LIBS=['user32','ole32'])

if build.is_linux():
	#if os.environ.has_key('PKG_CONFIG_PATH'):
		#Env.AppendENVPath('PKG_CONFIG_PATH', os.environ['PKG_CONFIG_PATH'])
	Env.ParseConfig('pkg-config --cflags --libs gtk+-2.0 gdk-2.0')

Env.Append(CPPPATH=[os.path.join(build.kroll_source_dir, 'host', build.os)])
Env.Append(LIBS=['kroll','khost'])
if build.is_osx() or build.is_linux():
	Env.Append(LIBS=['dl'])

p = Env.Program(build.dir + '/kkernel', ['main.cpp'])

if build.is_win32():
	Env.AddPostAction(p, ('mt.exe -nologo -manifest ' + \
	                     '"%s/kkernel.exe.manifest" ' + \
	                     ' -outputresource:%s/kkernel.exe') % \
	                     (build.dir, build.dir))
